EVERYTHING IS LITTLE-ENDIAN

This was all made for FFC, because that is what was viewable first. FF1 is broadly the same, and all
differences are documented in FF1/Differences.txt.

When I say "chunk," I mean a portion of attack_defs or creature_defs determined by the location of
two adjacent pointers at the beginning of those files.



A vivosaur's element is at 0x01. 01 is Fire, 02 is Air, 03 is Earth, 04 is Water, 05 is Neutral, and
06 is Legendary.

When it comes to vivosaur chunks, for (almost?) every vivosaur the moves are from 0xBC to 0xC3 for the
normal four (or three), and 0x4E to 0x4F for the Team Skill. The values are the hex versions of that
move's line number in names.text, aka their file's number in moveFiles. All values are two bytes here.

Crit rate is always at 0x12, and reduplicated at 0x13 for some reason. Link chance is at 0x14; both
are out of 100.

A vivosaur's Diet is at 0x15, although do note that that portion of its Fossilary entry is controlled
by a separate text file (text/text_museum). 01 is Carnivore, 02 is Herbivore, 03 is Omnivore, and 04 is
Unknown.

A vivosaur's Range is at 0x1A, with 01 being Close-Range, 02 being Mid-Range, and 03 being Long-Range.

A vivosaur's static/blue move is at 0x19. Link is not one of them; you just have Link by having a
non-zero chance. Here's the table for this:
01: nothing
02: Japanese for "View enemy details during battle"
03: Japanese for "Dinosaur placement randomization"
04: FP Plus
05: Parting Blow
06: Auto LP Recovery
07: Auto Counter
08: Japanese for "Status effect ability change disabled"
09: Japanese for "Support attack rate up"
0A: Japanese for "Makes it easier to obtain certain kinds of rocks"
0B: Japanese for "Increased movement speed"
0C: Japanese for "Can overcome obstacles"
0D: Elemental Boost
0E: Position Lock
0F: FP Absorb
10: Solo Power
11: Berserker
12: Enter with a Status
13: Japanese for "Increased damage against specific attributes"
14: Resurrect

The "Japanese for" effects are, of course, unused, and they also seem to not do what they say, or indeed
anything at all. Some may have only worked on debug builds, while others may only have worked in
FF1 (looking at you, 09).

0x50-0x51 are always the same value as that vivosaur's first move in vanilla, and has been shown to be the
move a vivosaur uses with Link. Since Link always skips move animations in FFC, you can put anything you
want in here without fear of it looking weird.

For effects which have one, 0x54 represents the ability's corresponding Value. It is inconsistent enough
that another table is in order:
nothing: Always 00
FP Plus: (+Percent + 100) / 10
Parting Blow: Percent / 10
Auto LP Recovery: Percent
Auto Counter: Since it is always 0x64 here, this is most likely the chance to trigger
Elemental Boost: Always 00
Position Lock: Always 00
FP Absorb: Percent of incoming move's FP cost gained
Solo Power: Always 00
Berserker: This is the only ability where 0x55 may be something other than 00, since this is what move
Hopter always uses when woozy. By default, it is E7 01, i.e. Beak Stab.
Enter with a Status: This represents the ID of the status. It matches up perfectly with the "primary"
effect table given below.
Resurrect: Z-Rex has a 02 here, even though this ability activates after three turns. However, this is
similar to how Infection has a 04 despite it taking 5 turns to kill (see below), so we can safely say
that this controls how many turns it takes to come back.

WARNING: If you give a vivosaur Start with a Status using a status that does not have a move name at the
end of text/text_ui, that vivosaur will show a completely tetxless blue box when you view its stats
anywhere. The statuses that have move names are the regular and Gold ("S") versions of Enflame, Harden,
Quicken, and Counter, along with Gold Sleep (for Nigo's "Sleepy").

A vivosaur's health for each level takes up the last 40 bytes of a chunk. Obviously, each health amount is
thus two bytes each (for Ranks 1 to 20).

For the other stats, the Rank 1 and Rank 20 amounts are just next to each other. 0x04 and 0x05 are Attack,
then 0x08 and 0x09 are Defense, then 0x0C to 0x0D are Accuracy, and then 0x10 and 0x11 are Speed. The
values between are presumably some sort of growth rate indicator.

0xC4 to 0xCB are the levels each move is learned at (two bytes each).

0xA4 to 0xAB tells you what side the vivosaur's support effects apply to. CC 00 00 00 00 00 00 00
means your side, 00 00 00 00 CC 00 00 00 means their side, and all zeroes means the vivosaur has no
support effects at all. Why CC? Tonzilla was able to help me figure that one out: it is a pointer to the
beginning of the support effects block. So if you happen to be editing Tonzilla and add whatever it is he
is missing, then make sure to change the C4 in this area to CC.

Rank 20 support effects can be found at 0xCC to 0xCF. They go in the usual Attack, Defense, Accuracy,
and Speed order, and each are one byte. For negative effects, the support % equals 255 - number + 1.
Vivosaurs with no support effects at all simply have four less bytes in their chunk, and what is here is
how many moves a vivo has.

On that point: after support effects if they are there is usually 01 02 03 04. This means that a vivosaur
has four non-team skills. For vivosaurs like Cheirus with only three, there is 01 02 03 00 there instead.
To be clear, to make a skill "no skill" in the ID area, use 00 00.

That block mostly seems redundant to me, especially since 0x94, 0x9C, AND 0xAC also contain the number of
moves. However, it is important for one thing and one thing only: the beginning and ending bytes of this
block are stored at 0xB0 and 0xB8, respectively. You HAVE to change these if you want to add or remove 
support effects entirely, i.e. when you add or delete bytes.

The team compatibility of a vivosaur can be found from 0x5C to 0x5F. It is stored not in hex, but in
binary, with each 1 of this 32-bit integer denoting a team it is in, and each 0 denoting a team it is
not in. When converting, do not swap the bytes around or anything, type them in exactly as you see them
(i.e. big-endian), and also remember to add zeroes at the beginning of the result if the first byte(s) are
00 (since programs usually leave those off). Here is the table for groups (it's very long, feel free to
skip over it):
1: Group 8
2: Group 7
3: Group 6 (Violent)
4: Group 5 (Neutral-types)
5: Group 4 (Water-Types)
6: Group 3 (Earth-Types)
7: Group 2 (Air-Types)
8: Group 1 (Fire-Types)
9: Group 16 (Japanese)
10: Group 15
11: Group 14
12: Group 13
13: Group 12
14: Group 11
15: Group 10
16: Group 9
17: Group 24
18: Group 23 (Zombie)
19: Group 22 (Boney)
20: Group 21
21: Group 20
22: Group 19
23: Group 18
24: Group 17
25: Unused "Group 32"
26: Group 31
27: Group 30 (Dinaurians)
28: Group 29
29: Group 28
30: Group 27
31: Group 26
32: Group 25
[each pre-colon number is in decimal, and is which bit from the left controls that group]

Note: these Groups come from the Wiki. See
https://fossilfighters.fandom.com/wiki/List_of_Compatible_Vivosaurs for more information.

Final word of warning: as with all things, if the file size is different (looking at you, Tonzilla), make
sure to change my locations accordingly. Every value from vanilla should be known, so just look for it.



For moves, the status seems to be in two different places (and notably unrelated to description text).
If its a damage status like Poison, it's the very first two bytes of the chunk; if not, those two bytes
are 01 00, and 0x20-0x21 are used. The first byte is the status, and the second is percent (e.g. 0x64 is
100%).

If a chunk is longer than 0x30, the secondary stuff will be that many bytes later than what is said here.
Hopefully.

If a move is "counter proof," the third byte of its chunk will be 0x00. If not, that byte will be 0x03.

Move FP/damage can (usually) be found at 0x18 to 0x1F. It's also usually reduplicated, so you get two
bytes of FP, then two bytes of damage, then two bytes of FP, and then two bytes of damage. The damage 
is BASE damage, i.e. Wiki Damage - Wiki Attack Stat.

To make a move have --- and deal no damage, literally set the damage values to 0.

Moves with a value attached, like healing, have theirs on the third and fourth bytes after the percent,
as a two-byter. If there is no value, it's just 00 00 there. The two-byter in between seems to specify
what it is for, e.g. 01 00 for healing, or 07 00 for...everything else? Still not clear on this one.

And now for the status tables:

PRIMARY (first two bytes):
01: nothing
02: Normal Poison
03: Gold Poison
04: Venom (U-Raptor)
05: Normal Sleep
06: Gold Sleep
07: Normal Scare
08: Gold Scare
09: Normal Enrage
0A: Gold Enrage
0B: Normal Confusion
0C: Gold Confusion
0D: Normal Excite
0E: Gold Excite
0F: Counter (Percent is for whether it is applied, 70% chance to counter is hardcoded)
10: Super Counter (Percent is for whether it is applied, 100% chance to counter is hardcoded)
11: Enflame
12: Super Enflame
13: Harden
14: Super Harden
15: Quicken
16: Super Quicken
17: Charge
18: Super Charge (unused)

SECONDARY (0x20-0x21):
01: nothing (everything is 00)
02: Transformation (bytes after percent are 07 00, extra value is always 01 00, vivosaur IDs start
at 0x30 and are each one byte. Once again ID = vivoFiles file number. Also 0x28 is the number of
possible vivos to transform into)
03: All-zone attack (always 0%, bytes after percent are 07 00, no extra value. Can hit your team if
used with a support effect like Harden, and can actually deal damage unlike with single-targeting.)
04: Steal LP Equal to Damage (bytes after percent are 07 00, no extra value)
05: Steal FP (bytes after percent are 07 00, extra value is stealing amount)
06: Spite Blast (bytes after pecent are 07 00, extra value is damage amount)
07: Power Scale [equalize FP] (bytes after percent are 07 00, no extra value)
08: Rotate (bytes after percent are 07 00, no extra value)
09: Unused, it heals youself only (bytes after percent are unknown, extra value is healing amount)
0A: Heal whole team (bytes after pecent are 05 00, extra value is healing amount)
0B: Sacrifice [nearly kill self to heal allies] (bytes after percent are 07 00, no extra value)
0C: Law of the Jungle [nearly kill ally and gain health] (bytes after percent are 07 00, no extra value)
0D: Healing (bytes after percent are 01 00, extra value is healing amount)
0E: Unused, it heals one other ally only (bytes after percent are unknown, extra value is healing amount)
0F: Cure all statuses (bytes after percent are 07 00, no extra value)
10: Unused, it's Rotate except it deals no damage even with a damage value assigned (bytes after percent
are unknown, no extra value). This may be how Slippery Ice is implemented.
11: Randomly attack enemy team (bytes after percent are 07 00, no extra value)
12: Infection (bytes after percent are 07 00, extra value is 04 00, and since the wiki says it's
five turns to death I wager this controls that)
13: Heal and cure statuses (bytes after percent are 01 00, extra value is healing amount)
14: Heal and cure statuses for whole team (bytes after percent are 05 00, extra value is healing amount)
15: Fickle Goddess [boost a stat randomly] (bytes after percent are 07 00, no extra value)
16: Inflict effects randomly (bytes after percent are 07 00, no extra value)
17: Instant KO (bytes after percent are 07 00, extra value is chance out of 256)
18: Cure all statuses for the whole team (bytes after percent are 07 00, no extra value)

WARNING: For certain vivosaurs that are palette swaps of other ones [e.g. T-Rex Lord and Mapo King], the
wrong model and sprite may be shown when you Transform into them. This has no effect on gameplay since the
moves are all correct; this is just a cosmetic issue. It is believed that this is caused by transformation
ignoring Silver Fossil recolorings, and such super evolvers being all internally considered recolors
of the same model.


This is not a chunk file, so it's hiding down here, but etc/btl_kp_defs controls how much FP you have
per hero level. Each row's 0x?C is the level number, then the next row's 0x?0-0x?1 are the max FP recharge,
and that row's 0x?2-0x?3 and 0x?6-0x?7 are the recharge per turn. Presuambly, one of these is for you,
and the other is for enemies. Or not, I don't know, because they're always the same in vanilla.

This also is not a chunk file, but it is a mouthful: etc/creature_evolution_abilityup_param_defs
controls the stat boosts of Gold and Silver fossils. The first 16 bytes are a header thing, then each
set of 12 bytes are the fossil's data: two bytes for ID, two bytes for Health boost, two bytes for Attack
boost, two bytes for Defense boost, two bytes for Accuracy boost, and two bytes for Speed boost. All values
are what you get if the fossil is cleaned to a full 100 points. In terms of order, it starts with the Gold
fossil, then the Silver Head, then the Body, then the Arms, and finally the Legs.